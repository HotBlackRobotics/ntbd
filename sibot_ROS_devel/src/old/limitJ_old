#!/usr/bin/env python
# license removed for brevity
import rospy
import math
import numpy
from sibot_msgs.msg import Servo_Array
from sensor_msgs.msg import JointState
from geometry_msgs.msg import Vector3

pub = rospy.Publisher('servo',  Servo_Array, queue_size=10)

def callback(servoA):
    servoL = [value for value in servoA.data]
    # Joint limits
    j1l = 0
    j1u = 180
    j2l = 55
    j2u = 145
    j3l = 20
    j3u = 110

     # Joint 1 limits: [0, 180]
    if servoA.data[0] <  j1l or servoA.data[0] > j1u:
        if max(servoA.data[0],j1l) == j1l:
            servoL[0] = j1l
        if max(servoA.data[0],j1u) == servoA.data[0]:
            servoL[0] = j1u

    # Joint 2 limits: [55, 145]
    if servoA.data[1] <  j2l or servoA.data[1] > j2u:
        if max(servoA.data[1],j2l) == j2l:
            servoL[1] = j2l
        if max(servoA.data[1],j2u) == servoA.data[1]:
            servoL[1] = j2u            
    
    # Joint 3 limits: [20, 110]
    if servoA.data[2] <  j3l or servoA.data[2] > j3u:
        if max(servoA.data[2],j3l) ==j3l :
            servoL[2] = j3l
        if max(servoA.data[2],j3u) == servoA.data[2]:
            servoL[2] = j3u 

    pub.publish(servoL)
    
def listener():
    rospy.init_node('limitJ', anonymous=True)
    rospy.Subscriber("servo_nolim", Servo_Array, callback)
    rospy.spin()

if __name__ == '__main__':
    listener()
