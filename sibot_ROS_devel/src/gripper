#!/usr/bin/env python
# license removed for brevity
import rospy
import math
import numpy
from sibot_msgs.msg import Servo_Array
from std_msgs.msg import String
#import time
pub = rospy.Publisher('servo_nolim', Servo_Array, queue_size=10)
global gripper
gripper = 180

def callback_grip(stat):
    global gripper
    if stat.data == 'closed':
        gripper = 90;
    if stat.data == 'open':
        gripper = 180;

def callback_servo(servo):
    angles = [servo.data[0], servo.data[1], servo.data[2], gripper]
    pub.publish(angles)

def listener():
    rospy.init_node('gripper', anonymous=True)
    rospy.Subscriber("gripper_status", String, callback_grip)
    rospy.Subscriber("servo_nogripper", Servo_Array, callback_servo)

    #Start position
    #pub.publish([angles['M1'],angles['M2'],angles['M3']])
    #pub.publish(angles)
    rospy.spin()

if __name__ == '__main__':
    listener()

#For a circle with origin (j, k) and radius r:
#x(t) = r cos(t) + j
#y(t) = r sin(t) + k

