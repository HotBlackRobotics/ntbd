#!/usr/bin/env python
# license removed for brevity
import rospy
#import math
#import numpy
from geometry_msgs.msg import Point

pub = rospy.Publisher('desired_position_nointerp', Point, queue_size=10)

def callback(position_nolim):
    position_val = [position_nolim.x, position_nolim.y, position_nolim.z]
    position_llim = rospy.get_param('position_limiter/position_llim')
    position_ulim = rospy.get_param('position_limiter/position_ulim')
    
# Motors lower limits: 
    i = 0
    for llim in position_llim:
        if position_val[i] <  llim:
            position_val[i] = llim
        i = i + 1

# Motors upper limits:
    j = 0
    for ulim in position_ulim:
        if position_val[j] > ulim:
            position_val[j] = ulim
        j = j + 1    
    
    pos = Point()
    pos.x = position_val[0]
    pos.y = position_val[1]
    pos.z = position_val[2]

    pub.publish(pos)
        
def listener():
    rospy.init_node('position_limiter', anonymous=True) 
    rospy.Subscriber("desired_position_nolim", Point, callback)
    rospy.spin()

if __name__ == '__main__':
    listener()
